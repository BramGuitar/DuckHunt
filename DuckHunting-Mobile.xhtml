<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">
<head>
  <title>Duck Hunting Mobile</title>
  <meta charset="UTF-8" />
  <style>
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background: #87CEEB;
      overflow: hidden;
      text-align: center;
    }
    #start-screen, #game-over, #leaderboard {
      display: none;
      position: absolute;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: #87CEEB;
      justify-content: center;
      align-items: center;
      flex-direction: column;
    }
    #start-screen.active, #game-over.active, #leaderboard.active {
      display: flex;
    }
    #game-screen {
      display: none;
      width: 100%; height: 100vh;
      position: relative;
      overflow: hidden;
    }
    #scoreboard {
      position: absolute;
      top: 10px; left: 10px;
      font-size: 20px;
      background: rgba(255,255,255,0.7);
      padding: 5px 10px;
      border-radius: 8px;
    }
    #duck, #clock-duck {
      position: absolute;
      font-size: 40px;
      cursor: crosshair;
    }
    #crosshair {
      width: 40px; height: 40px;
      border: 2px solid red;
      border-radius: 50%;
      position: absolute;
      pointer-events: none;
      display: none;
    }
    #bomb-message {
      position: absolute;
      top: 50px; left: 50%;
      transform: translateX(-50%);
      font-size: 22px;
      color: red;
      display: none;
    }
    #bomb-button {
      position: fixed;
      bottom: 20px;
      right: 20px;
      padding: 15px;
      font-size: 24px;
      border: none;
      border-radius: 50%;
      background: red;
      color: white;
      box-shadow: 0px 4px 6px rgba(0,0,0,0.3);
      cursor: pointer;
      display: none;
    }
  </style>
</head>
<body>
  <!-- Startscherm -->
  <div id="start-screen" class="active">
    <h1>Duck Hunting</h1>
    <p>Kies moeilijkheidsgraad:</p>
    <button onclick="startGame('easy')">Easy</button>
    <button onclick="startGame('medium')">Medium</button>
    <button onclick="startGame('hard')">Hard</button>
  </div>

  <!-- Game scherm -->
  <div id="game-screen">
    <div id="scoreboard">Score: 0</div>
    <div id="bomb-message">Bom gebruikt! +5 punten</div>
    <div id="duck">ü¶Ü</div>
    <div id="clock-duck" style="display:none;">‚è±Ô∏è</div>
    <div id="crosshair"></div>
    <button id="bomb-button">üí£</button>
  </div>

  <!-- Game over scherm -->
  <div id="game-over">
    <h1>Game Over</h1>
    <p id="final-score"></p>
    <p>Vul je naam in:</p>
    <input type="text" id="player-name" placeholder="Jouw naam" />
    <button onclick="saveScore()">Opslaan &amp; Leaderboard</button>
  </div>

  <!-- Leaderboard -->
  <div id="leaderboard">
    <h1>Leaderboard</h1>
    <ol id="scores-list"></ol>
    <button onclick="restart()">Opnieuw spelen</button>
  </div>

  <script type="text/javascript">
    var duck = document.getElementById("duck");
    var clockDuck = document.getElementById("clock-duck");
    var scoreboard = document.getElementById("scoreboard");
    var bombMsg = document.getElementById("bomb-message");
    var bombButton = document.getElementById("bomb-button");
    var crosshair = document.getElementById("crosshair");

    var score = 0;
    var bombUsed = false;
    var gameInterval;
    var gameTime = 30; // seconden
    var difficultySpeed = 2000;
    var clockAvailable = true;
    var clockTimer;

    function startGame(difficulty) {
      document.getElementById("start-screen").classList.remove("active");
      document.getElementById("game-screen").style.display = "block";
      score = 0;
      bombUsed = false;
      clockAvailable = true;
      scoreboard.textContent = "Score: 0";

      // moeilijkheid instellen
      if (difficulty === "easy") difficultySpeed = 2000;
      if (difficulty === "medium") difficultySpeed = 1200;
      if (difficulty === "hard") difficultySpeed = 700;

      moveDuck();
      gameInterval = setInterval(moveDuck, difficultySpeed);
      startClockDuck();
    }

    function moveDuck() {
      var x = Math.random() * (window.innerWidth - 50);
      var y = Math.random() * (window.innerHeight - 50);
      duck.style.left = x + "px";
      duck.style.top = y + "px";
    }

    duck.onclick = function () {
      score++;
      scoreboard.textContent = "Score: " + score;
      moveDuck();
    };

    // klok-eend logica
    function startClockDuck() {
      showClockDuck();
      clockTimer = setInterval(showClockDuck, 45000);
    }

    function showClockDuck() {
      if (clockAvailable) {
        var x = Math.random() * (window.innerWidth - 50);
        var y = Math.random() * (window.innerHeight - 50);
        clockDuck.style.left = x + "px";
        clockDuck.style.top = y + "px";
        clockDuck.style.display = "block";
      }
    }

    clockDuck.onclick = function () {
      score += 3;
      scoreboard.textContent = "Score: " + score;
      clockDuck.style.display = "none";
      clockAvailable = false;
      setTimeout(function () {
        clockAvailable = true;
      }, 45000);
    };

    // bom knop logica
    if (window.innerWidth < 768) {
      bombButton.style.display = "block";
    }

    bombButton.onclick = function () {
      if (!bombUsed) {
        score += 5;
        scoreboard.textContent = "Score: " + score;
        bombUsed = true;
        moveDuck();
        bombMsg.style.display = "block";
        setTimeout(function () {
          bombMsg.style.display = "none";
        }, 3000);
      }
    };

    // crosshair
    document.addEventListener("mousemove", function (e) {
      crosshair.style.left = e.pageX - 20 + "px";
      crosshair.style.top = e.pageY - 20 + "px";
    });

    // game timer
    setTimeout(endGame, gameTime * 1000);

    function endGame() {
      clearInterval(gameInterval);
      clearInterval(clockTimer);
      document.getElementById("game-screen").style.display = "none";
      document.getElementById("game-over").classList.add("active");
      document.getElementById("final-score").textContent = "Jouw score: " + score;
    }

    // leaderboard
    function saveScore() {
      var name = document.getElementById("player-name").value || "Anoniem";
      var scores = JSON.parse(localStorage.getItem("duckScores") || "[]");
      scores.push({ name: name, score: score });
      scores.sort(function(a, b){ return b.score - a.score; });
      scores = scores.slice(0, 10);
      localStorage.setItem("duckScores", JSON.stringify(scores));

      document.getElementById("game-over").classList.remove("active");
      document.getElementById("leaderboard").classList.add("active");

      var list = document.getElementById("scores-list");
      list.innerHTML = "";
      scores.forEach(function(s){
        var li = document.createElement("li");
        li.textContent = s.name + ": " + s.score;
        list.appendChild(li);
      });
    }

    function restart() {
      document.getElementById("leaderboard").classList.remove("active");
      document.getElementById("start-screen").classList.add("active");
    }
  </script>
</body>
</html>
